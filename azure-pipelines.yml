# For the moment for test I use master and not release
# Author: StÃ©phane Bressani
# Deploy on azure
# For the future -> cargo test --all (build --all ???)

trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - bash: |
      sudo apt-get update && sudo apt-get -y install postgresql libpq-dev
    displayName: Install postgresql
  - task: CmdLine@2
    inputs: 
      script:
        rm -rf ./.env
    displayName: Remove env file (if exist)
  - task: CmdLine@2
    inputs:
      script: |
        echo 'DATABASE_URL=postgres://$(pg-login):$(pg-password)@$(pg-ip)/partages_web
        ROCKET_ADDRESS=$(pg-rocket-ip)
        ROCKER_PORT=8000' >> ./.env
    displayName: Config db
  - task: CmdLine@2
    inputs:
      script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y 
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
  - task: CmdLine@2
    inputs:
      script: rustup toolchain install nightly
    displayName: Install rust nightly
  - task: CmdLine@2
    inputs:
      script: rustup default nightly
    displayName: Switch to rust nightly
  - task: CmdLine@2
    inputs:
      script: cargo install cargo-web
    displayName: Install cargo-web
  - task: CmdLine@2
    inputs:
      script: cargo build --release
    displayName: Compile
  - task: CmdLine@2
    inputs:
      script: rm -rf target-final
    displayName: Create a final repertory (rm)
  - task: CmdLine@2
    inputs:
      script: mkdir target-final
    displayName: Create a final repertory (mkdir)
  - task: CmdLine@2
    inputs:
      script: mv ./.env ./target-final/.env
    displayName: Move config
  - task: CmdLine@2
    inputs:
      script: mv ./public/ ./target-final/
    displayName: Move static html backend
  - task: CmdLine@2
    inputs:
      script: mv ./target/release/paratages_web ./target-final/serve
    displayName: Move binary
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)/target-final'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/partages_web.zip'
      replaceExistingArchive: true
      verbose: # (no value); this input is optional
  - task: FtpUpload@2
    inputs:
      credentialsOption: 'inputs'
      serverUrl: 'ftp://$(ftp-ip)'
      username: '$(ftp-user)'
      password: '$(ftp-password)'
      rootDirectory: '$(Build.ArtifactStagingDirectory)'
      filePatterns: '**'
      remoteDirectory: '/home/stephane/ftp/build/$(Build.BuildId)/'
      clean: false
      cleanContents: false
      preservePaths: false
      trustSSL: false
